{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "extends": [
    "next/core-web-vitals",
    "next/typescript",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:tailwindcss/recommended"
  ],
  "plugins": ["@typescript-eslint", "simple-import-sort", "import", "prettier", "@tanstack/query"],
  "env": {
    "es6": true,
    "browser": true,
    "jest": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "react/display-name": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/consistent-type-imports": ["error", { "prefer": "type-imports" }],
    "@tanstack/query/exhaustive-deps": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "prettier/prettier": "error"
  },
  "overrides": [
    {
      "files": ["**/src/**"],
      "rules": {
        "@typescript-eslint/typedef": "error",
        "no-console": ["error", { "allow": ["warn", "error"] }],
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [["^\\u0000"], ["^react"], ["^[^.]"], ["^\\."]]
          }
        ],
        "padding-line-between-statements": [
          "error",
          { "blankLine": "always", "prev": "*", "next": "return" },
          {
            "blankLine": "always",
            "prev": "*",
            "next": ["if", "class", "for", "switch", "try"]
          },
          {
            "blankLine": "always",
            "prev": ["if", "class", "for", "switch", "try"],
            "next": "*"
          },
          {
            "blankLine": "always",
            "prev": "*",
            "next": ["const", "let", "var", "export"]
          },
          {
            "blankLine": "always",
            "prev": ["const", "let", "var", "export"],
            "next": "*"
          },
          {
            "blankLine": "any",
            "prev": ["const", "let", "var", "export"],
            "next": ["const", "let", "var", "export"]
          }
        ],
        "eol-last": "warn"
      }
    }
  ]
}
